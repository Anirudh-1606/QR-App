{"version":3,"sources":["styles/global.js","components/menuInfo.js","context/OrderContext.js","context/OrderFlag.js","components/menu/itemList.js","components/menu/itemCat.js","components/menu/SnackBar.js","config/firebase.js","components/menuBody.js","screens/Menu.js","screens/Details.js","components/total/Description.js","screens/Total.js","App.js","assets/fonts/Poppins-Bold.ttf","assets/fonts/Poppins-SemiBold.ttf","assets/fonts/Poppins-Regular.ttf","assets/fonts/Poppins-Light.ttf"],"names":["globalStyles","StyleSheet","create","container","flex","padding","titleText","fontFamily","fontSize","color","paragraph","marginVertical","lineHeight","tableSize","waiterBell","marginLeft","preg","mg_top","marginTop","itemHead","itemDes","iconFlex","flexDirection","justifyContent","MenuInfo","useState","setColor","View","style","styles","infoComp","Text","TouchableOpacity","waiterComp","onPress","console","log","FontAwesome","name","size","height","alignItems","OrderContext","createContext","OrderProvider","props","order","setOrder","Provider","value","children","FlagContext","FlagProvider","flag","setFlag","ItemList","data","useContext","dish","price","qty","orderItem","setOrderItem","setQty","navigation","useNavigation","updateOrderItem","e","itemListCon","Image","img_size","source","uri","image","paddingLeft","width","navigate","imgLoc","description","qtyCon","fontWeight","borderRadius","paddingBottom","paddingTop","marginRight","paddingRight","backgroundColor","transition","Together","In","type","durationMs","Change","Out","ItemCat","category","index","ref","React","useRef","arrow","setArrow","currIndex","setCurrIndex","catCon","map","key","borderBottomWidth","borderBottomColor","conGrow","flexGrow","snackContainer","position","margin","bottom","snackBar","minWidth","maxHeight","snackBarText","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","MenuBody","toggle1","setToggle1","toggle2","setToggle2","setIsLoading","screen","starters","setStarters","biriyanis","setBiriyani","icecreams","setIcecreams","breads","setBreads","docref","firestore","collection","useEffect","start","bread","iceCream","biriyani","a","async","get","then","querySnapshot","docs","doc","items","modules","Object","values","item","course","push","catch","err","screenHeight","Dimensions","body_head","cat_row","cat_pad","rowCat","cat_mg","contentContainerStyle","Menu","Details","route","params","DetailImg","iconDiv","textCon","Description","Total","summaryHead","LogBox","ignoreLogs","getFonts","Font","require","Stack","createNativeStackNavigator","App","fontsLoaded","setFontsLoaded","NavigationContainer","Navigator","Screen","component","options","title","headerStyle","headerTintColor","headerTitleStyle","headerBackTitleStyle","startAsync","onFinish","onError","module","exports"],"mappings":"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","file":"static/js/app.e792b450.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 25,\r\n  },\r\n  titleText: {\r\n    fontFamily: \"poppins-bold\",\r\n    fontSize: 36,\r\n    color: \"#333\",\r\n  },\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n  tableSize: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 18,\r\n  },\r\n  waiterBell: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 18,\r\n    marginLeft: 5,\r\n  },\r\n  preg: {\r\n    fontFamily: \"poppins-regular\",\r\n    fontSize: 12,\r\n  },\r\n  mg_top: {\r\n    marginTop: 15,\r\n  },\r\n  itemHead: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 16,\r\n  },\r\n  itemDes: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 14,\r\n  },\r\n  iconFlex: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 30,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, Text, View } from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { globalStyles } from \"../styles/global\";\r\n\r\nexport default function MenuInfo() {\r\n  const [color, setColor] = useState(\"black\");\r\n\r\n  return (\r\n    <View style={styles.infoComp}>\r\n      <Text style={globalStyles.tableSize}>Table No: 2</Text>\r\n      <TouchableOpacity\r\n        style={styles.waiterComp}\r\n        onPress={() => {\r\n          if (color == \"red\") {\r\n            setColor(\"black\");\r\n          } else {\r\n            setColor(\"red\");\r\n            console.log(\"Table 2 requires assistance\");\r\n          }\r\n        }}\r\n      >\r\n        <FontAwesome name=\"bell-o\" size={24} color={color} />\r\n        <Text style={globalStyles.waiterBell}>Call Waiter</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  infoComp: {\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    height: \"5%\",\r\n    alignItems: \"center\",\r\n  },\r\n  waiterComp: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const OrderContext = createContext();\r\n\r\nexport const OrderProvider = (props) => {\r\n  const [order, setOrder] = useState([]);\r\n  return (\r\n    <OrderContext.Provider value={[order, setOrder]}>\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const FlagContext = createContext();\r\n\r\nexport const FlagProvider = (props) => {\r\n  const [flag, setFlag] = useState(false);\r\n  return (\r\n    <FlagContext.Provider value={[flag, setFlag]}>\r\n      {props.children}\r\n    </FlagContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport { globalStyles } from \"../../styles/global\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { OrderContext } from \"../../context/OrderContext\";\r\nimport { FlagContext } from \"../../context/OrderFlag\";\r\n\r\nexport default function ItemList(data) {\r\n  const [order, setOrder] = useContext(OrderContext);\r\n  const [flag, setFlag] = useContext(FlagContext);\r\n  const dish = data;\r\n  const [orderItem, setOrderItem] = useState({ name: \"\", price: \"\", qty: \"\" });\r\n  const [qty, setQty] = useState(0);\r\n  const navigation = useNavigation();\r\n\r\n  const updateOrderItem = (flag) => {\r\n    if (dish.data.name) {\r\n      setOrderItem(() => ({\r\n        name: dish.data.name,\r\n        price: dish.data.price,\r\n        qty: flag ? qty + 1 : qty - 1,\r\n      }));\r\n      setFlag(true);\r\n      try {\r\n        if (orderItem.name) {\r\n          setOrder([...order, orderItem]);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n  // console.log(qty);\r\n  // if (orderItem.name) {\r\n  //   console.log(orderItem);\r\n  // }\r\n  console.log(order);\r\n\r\n  return (\r\n    <View style={styles.itemListCon}>\r\n      <Image style={styles.img_size} source={{ uri: dish.data.image }} />\r\n      <View style={{ paddingLeft: 15, width: \"45%\" }}>\r\n        <Text style={globalStyles.itemHead}>{dish.data.name}</Text>\r\n        <Text style={globalStyles.itemDes}>Price: {dish.data.price}</Text>\r\n        <TouchableOpacity\r\n          onPress={() =>\r\n            navigation.navigate(\"Details\", {\r\n              imgLoc: dish.data.image,\r\n              description: dish.data.description,\r\n              price: dish.data.price,\r\n              name: dish.data.name,\r\n            })\r\n          }\r\n        >\r\n          <Text style={{ color: \"#ff2800\" }}>What's this?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View>\r\n        <View style={globalStyles.iconFlex}>\r\n          <TouchableOpacity>\r\n            <FontAwesome\r\n              name=\"minus-square-o\"\r\n              size={24}\r\n              color=\"red\"\r\n              onPress={() => {\r\n                if (qty > 0) {\r\n                  setQty(qty - 1);\r\n                  updateOrderItem(false);\r\n                }\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n          <View style={styles.qtyCon}>\r\n            <Text style={{ fontWeight: \"bold\", color: \"red\", fontSize: 16 }}>\r\n              {qty}\r\n            </Text>\r\n          </View>\r\n\r\n          <TouchableOpacity>\r\n            <FontAwesome\r\n              name=\"plus-square-o\"\r\n              size={24}\r\n              color=\"red\"\r\n              onPress={() => {\r\n                setQty(qty + 1);\r\n                updateOrderItem(true);\r\n              }}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  img_size: {\r\n    height: 80,\r\n    width: 100,\r\n    borderRadius: 15,\r\n  },\r\n  itemListCon: {\r\n    width: \"90%\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n    paddingBottom: 10,\r\n    paddingTop: 15,\r\n\r\n    marginRight: \"auto\",\r\n  },\r\n  qtyCon: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n    borderRadius: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n\r\n    backgroundColor: \"#ffcccb\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport ItemList from \"./itemList\";\r\nimport { Transition, Transitioning } from \"react-native-reanimated\";\r\n\r\nconst transition = (\r\n  <Transition.Together>\r\n    <Transition.In type=\"fade\" durationMs={200} />\r\n    <Transition.Change />\r\n    <Transition.Out type=\"fade\" durationMs={200} />\r\n  </Transition.Together>\r\n);\r\n\r\nexport default function ItemCat({ category, index, data }) {\r\n  const ref = React.useRef();\r\n  const [arrow, setArrow] = useState(\"angle-down\");\r\n  const [currIndex, setCurrIndex] = useState(null);\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity\r\n        style={styles.catCon}\r\n        onPress={() => {\r\n          setCurrIndex(index == currIndex ? null : index);\r\n          if (arrow == \"angle-down\") {\r\n            setArrow(\"angle-up\");\r\n          } else {\r\n            setArrow(\"angle-down\");\r\n          }\r\n        }}\r\n      >\r\n        <Text style={styles.itemHead}>{category}</Text>\r\n        <FontAwesome name={arrow} size={24} color=\"black\" />\r\n      </TouchableOpacity>\r\n      <Transitioning.View ref={ref} transition={transition}>\r\n        {index === currIndex && (\r\n          <View>\r\n            {data.map((dish, index) => (\r\n              <ItemList key={index} data={dish} />\r\n            ))}\r\n          </View>\r\n        )}\r\n      </Transitioning.View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  catCon: {\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"90%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    paddingBottom: 20,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#E5E5E5\",\r\n    paddingTop: 25,\r\n  },\r\n  itemHead: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 20,\r\n  },\r\n  conGrow: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n{\r\n  /* <ItemList style={styles.conGrow} */\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { View, StyleSheet, Text, TouchableOpacity } from \"react-native\";\r\nimport { globalStyles } from \"../../styles/global\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { OrderContext } from \"../../context/OrderContext\";\r\n\r\nexport default function SnackBar() {\r\n  const [order, setOrder] = useContext(OrderContext);\r\n  const navigation = useNavigation();\r\n  console.log(\"snack Bar =>\", order);\r\n  return (\r\n    <View style={styles.snackContainer}>\r\n      <View style={styles.snackBar}>\r\n        <View>\r\n          <Text style={styles.snackBarText}>Total : 1235/-</Text>\r\n          <Text style={styles.snackBarText}>Taxes will be extra</Text>\r\n        </View>\r\n        <View>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              navigation.navigate(\"Total\", order);\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"poppins-bold\",\r\n                color: \"white\",\r\n                fontSize: 20,\r\n\r\n                paddingLeft: \"10%\",\r\n              }}\r\n            >\r\n              Order Now\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  snackContainer: {\r\n    position: \"absolute\",\r\n    width: \"105%\",\r\n    margin: -19,\r\n    // marginBottom: -20,\r\n    // marginLeft: -13,\r\n    bottom: 0,\r\n  },\r\n  snackBar: {\r\n    padding: 20,\r\n\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"black\",\r\n    minWidth: \"82%\",\r\n    maxHeight: 80,\r\n    justifyContent: \"space-between\",\r\n    borderRadius: 8,\r\n  },\r\n  snackBarText: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 16,\r\n    color: \"white\",\r\n  },\r\n});\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDiW5fqgjHh1VBL-N26vps2RppnlP2B7kc\",\r\n  authDomain: \"qr-menu-app-45549.firebaseapp.com\",\r\n  databaseURL: \"https://qr-menu-app-45549-default-rtdb.firebaseio.com\",\r\n  projectId: \"qr-menu-app-45549\",\r\n  storageBucket: \"qr-menu-app-45549.appspot.com\",\r\n  messagingSenderId: \"447181607020\",\r\n  appId: \"1:447181607020:web:d66f9a3ee9744e8722c849\",\r\n  measurementId: \"G-9HD4HW4XG6\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ experimentalForceLongPolling: true });\r\nexport default firebase;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { globalStyles } from \"../styles/global\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\nimport ItemCat from \"./menu/itemCat\";\r\nimport SnackBar from \"./menu/SnackBar\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport firebase from \"../config/firebase\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { FlagContext } from \"../context/OrderFlag\";\r\n\r\nconst category = [\"Starters\", \"Curries\", \"Biriyanis\", \"Breads\", \"Icecreams\"];\r\n\r\nexport default function MenuBody({ navigation }) {\r\n  const [flag, setFlag] = useContext(FlagContext);\r\n\r\n  const [toggle1, setToggle1] = useState(\"toggle-off\");\r\n  const [toggle2, setToggle2] = useState(\"toggle-off\");\r\n  const [isLoad, setIsLoading] = useState(true);\r\n  const [screen, setScreen] = useState(230);\r\n  const show = true;\r\n  const [starters, setStarters] = useState([]);\r\n  const [biriyanis, setBiriyani] = useState([]);\r\n  const [icecreams, setIcecreams] = useState([]);\r\n  const [breads, setBreads] = useState([]);\r\n\r\n  const db = firebase.firestore();\r\n  const docref = db.collection(\"menu\");\r\n\r\n  useEffect(() => {\r\n    const start = [];\r\n    const bread = [];\r\n    const iceCream = [];\r\n    const biriyani = [];\r\n    const fetchMenu = async () => {\r\n      await docref\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          querySnapshot.docs.map((doc) => {\r\n            var items = doc.data();\r\n            var modules = Object.values(items);\r\n\r\n            for (let item in modules) {\r\n              if (modules[item].course == \"starters\") {\r\n                // setStarters([...starters, modules[item]]);\r\n                start.push(modules[item]);\r\n              } else if (modules[item].course == \"biriyani\") {\r\n                // setBiriyani([...biriyanis, modules[item]]);\r\n                biriyani.push(modules[item]);\r\n              } else if (modules[item].course == \"icecream\") {\r\n                // setIcecreams([...icecreams, modules[item]]);\r\n                iceCream.push(modules[item]);\r\n              } else if (modules[item].course == \"breads\") {\r\n                // setBreads([...breads, modules[item]]);\r\n                bread.push(modules[item]);\r\n              }\r\n            }\r\n            setStarters(start);\r\n            setBiriyani(biriyani);\r\n            setIcecreams(iceCream);\r\n            setBreads(bread);\r\n            setIsLoading(false);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n    // console.log(starters);\r\n    fetchMenu(); //CALLING FUNCTION\r\n  }, []);\r\n\r\n  let screenHeight = Dimensions.get(\"window\").height;\r\n  return (\r\n    <View>\r\n      <Text style={styles.body_head}>Here's the best food Today!</Text>\r\n\r\n      <View style={styles.cat_row}>\r\n        <View style={styles.cat_pad}>\r\n          <TouchableOpacity\r\n            style={styles.rowCat}\r\n            onPress={() => {\r\n              if (toggle1 == \"toggle-on\") {\r\n                setToggle1(\"toggle-off\");\r\n              } else {\r\n                setToggle1(\"toggle-on\");\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesome name={toggle1} size={24} color=\"black\" />\r\n            <Text style={styles.cat_mg}>Veg</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.cat_pad}>\r\n          <TouchableOpacity\r\n            style={styles.rowCat}\r\n            onPress={() => {\r\n              if (toggle2 == \"toggle-on\") {\r\n                setToggle2(\"toggle-off\");\r\n              } else {\r\n                setToggle2(\"toggle-on\");\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesome name={toggle2} size={24} color=\"black\" />\r\n            <Text style={styles.cat_mg}>Non-Veg</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View\r\n        style={{\r\n          height: screenHeight - screen,\r\n          paddingBottom: 15,\r\n          paddingTop: 15,\r\n        }}\r\n      >\r\n        <ScrollView\r\n          contentContainerStyle={{\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <ItemCat category={\"Starters\"} data={starters} index={1} />\r\n          <ItemCat category={\"Breads\"} data={breads} index={2} />\r\n          <ItemCat category={\"Biriyani\"} data={biriyanis} index={3} />\r\n          <ItemCat category={\"IceCreams\"} data={icecreams} index={4} />\r\n        </ScrollView>\r\n      </View>\r\n\r\n      {/* <View>{flag && <SnackBar />}</View> */}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rowCat: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  cat_mg: {\r\n    marginLeft: 5,\r\n    fontFamily: \"poppins-regular\",\r\n    fontSize: 16,\r\n  },\r\n  cat_row: {\r\n    flexDirection: \"row\",\r\n    marginTop: 5,\r\n    paddingBottom: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#E5E5E5\",\r\n  },\r\n  cat_pad: {\r\n    paddingLeft: 10,\r\n  },\r\n  body_head: {\r\n    fontFamily: \"poppins-semibold\",\r\n    fontSize: 20,\r\n    marginTop: 8,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, Button } from \"react-native\";\r\nimport { globalStyles } from \"../styles/global\";\r\nimport MenuInfo from \"../components/menuInfo\";\r\nimport MenuBody from \"../components/menuBody\";\r\nimport { OrderProvider } from \"../context/OrderContext\";\r\nimport { FlagProvider } from \"../context/OrderFlag\";\r\n\r\nexport default function Menu({ navigation }) {\r\n  return (\r\n    <View style={globalStyles.container}>\r\n      <MenuInfo />\r\n      <FlagProvider>\r\n        <OrderProvider>\r\n          <MenuBody />\r\n        </OrderProvider>\r\n      </FlagProvider>\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View, Image } from \"react-native\";\r\nimport { globalStyles } from \"../styles/global\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nexport default function Details({ route, navigation }) {\r\n  const { imgLoc, name, price, description } = route.params;\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image source={{ uri: imgLoc }} style={styles.DetailImg} />\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          paddingTop: 10,\r\n          paddingLeft: 10,\r\n          paddingRight: 10,\r\n        }}\r\n      >\r\n        <Text style={{ fontFamily: \"poppins-bold\", fontSize: 21 }}>{name}</Text>\r\n        <View>\r\n          <View style={styles.iconFlex}>\r\n            <FontAwesome name=\"minus-square-o\" size={24} color=\"black\" />\r\n            <View style={globalStyles.iconDiv}>\r\n              <Text>0</Text>\r\n            </View>\r\n            <FontAwesome name=\"plus-square-o\" size={24} color=\"black\" />\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <View style={styles.textCon}>\r\n        <Text style={{ fontFamily: \"poppins-semibold\", fontSize: 20 }}>\r\n          Price: {price}/-\r\n        </Text>\r\n        <Text style={{ fontFamily: \"poppins-semibold\", fontSize: 18 }}>\r\n          Description:\r\n        </Text>\r\n        <Text style={{ fontFamily: \"poppins-regular\", fontSize: 16 }}>\r\n          {description}\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  DetailImg: {\r\n    width: \"100%\",\r\n    height: \"65%\",\r\n  },\r\n  iconFlex: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  textCon: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n});\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, Text, View, Button } from \"react-native\";\r\nimport { OrderContext } from \"../../context/OrderContext\";\r\nexport default function Description() {\r\n  const [order, setOrder] = useContext(OrderContext);\r\n  console.log(\"from descrip =>\", order);\r\n  useEffect(() => {\r\n    console.log(order);\r\n  }, [order]);\r\n  return (\r\n    <View>\r\n      <Text>HELLO</Text>\r\n      {order.map((item) => {\r\n        <Text>{item.name}</Text>;\r\n      })}\r\n    </View>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { OrderProvider } from \"../context/OrderContext\";\r\nimport Description from \"../components/total/Description\";\r\n\r\nexport default function Total({ route }) {\r\n  const order = route.params;\r\n  console.log(\"order from total =>\", order);\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Text style={styles.summaryHead}>Your order is:</Text>\r\n      </View>\r\n      <OrderProvider>\r\n        <Description />\r\n      </OrderProvider>\r\n      <View>\r\n        {order.map((item, index) => {\r\n          <Text key={index}>{item.name}</Text>;\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n  summaryHead: {\r\n    fontFamily: \"poppins-bold\",\r\n    fontSize: 21,\r\n  },\r\n});\r\n","import * as Font from \"expo-font\";\nimport React, { useState } from \"react\";\nimport Menu from \"./screens/Menu\";\nimport Details from \"./screens/Details\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Total from \"./screens/Total\";\nimport AppLoading from \"expo-app-loading\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { LogBox } from \"react-native\";\n\nLogBox.ignoreLogs([\"Setting a timer\"]);\nconst getFonts = () => {\n  return Font.loadAsync({\n    \"poppins-bold\": require(\"./assets/fonts/Poppins-Bold.ttf\"),\n    \"poppins-semibold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    \"poppins-regular\": require(\"./assets/fonts/Poppins-Regular.ttf\"),\n    \"poppins-light\": require(\"./assets/fonts/Poppins-Light.ttf\"),\n  });\n};\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  if (fontsLoaded) {\n    return (\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"Menu Screen\"\n            component={Menu}\n            options={{\n              title: \"Restaurant\",\n              headerStyle: {\n                backgroundColor: \"#D13434\",\n              },\n              headerTintColor: \"#fff\",\n              headerTitleStyle: {\n                fontWeight: \"bold\",\n              },\n              headerBackTitleStyle: {\n                fontFamily: \"poppins-bold\",\n              },\n            }}\n          />\n          <Stack.Screen\n            name=\"Details\"\n            component={Details}\n            options={{\n              title: \"Details\",\n              headerStyle: {\n                backgroundColor: \"#D13434\",\n              },\n              headerTintColor: \"#fff\",\n              headerTitleStyle: {\n                fontWeight: \"bold\",\n              },\n              headerBackTitleStyle: {\n                fontFamily: \"poppins-bold\",\n              },\n            }}\n          />\n\n          <Stack.Screen\n            name=\"Total\"\n            component={Total}\n            options={{\n              title: \"Order Summary\",\n              headerStyle: {\n                backgroundColor: \"#D13434\",\n              },\n              headerTintColor: \"#fff\",\n              headerTitleStyle: {\n                fontWeight: \"bold\",\n              },\n              headerBackTitleStyle: {\n                fontFamily: \"poppins-bold\",\n              },\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  } else {\n    return (\n      <AppLoading\n        startAsync={getFonts}\n        onFinish={() => setFontsLoaded(true)}\n        onError={() => console.log(\"error\")}\n      />\n    );\n  }\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Poppins-SemiBold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Light.ttf\";"],"sourceRoot":""}